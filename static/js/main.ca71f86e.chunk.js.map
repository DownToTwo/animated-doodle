{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","name","setName","useState","React","createElement","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","editFieldRef","useRef","editButtonRef","isEditing","setEditing","newName","setNewName","useEffect","current","focus","wasEditing","ref","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","App","remainingTasks","tasks","filter","task","setTasks","updatedTasks","map","editedTaskList","FILTER_MAP","All","Active","Completed","filterList","Object","keys","key","taskList","prevTaskLength","length","listHeadingRef","tasksNoun","headingText","concat","newTask","tabIndex","role","aria-labelledby","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ca71f86e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nfunction Todo(props) {\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  useEffect(() => {\n    if (isEditing) {\n      editFieldRef.current.focus();\n    } else {\n      editButtonRef.current.focus();\n    }\n  }, [isEditing]);\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n  const wasEditing = usePrevious(isEditing);\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n        >\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\nexport default Todo;\n","import \"./App.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\n\nfunction App(props) {\n  function addTask(name) {\n    const newTask = { id: \"id\", name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  const [filter, setFilter] = useState(\"All\");\n  const [tasks, setTasks] = useState(props.tasks);\n  const FILTER_MAP = {\n    All: () => true,\n    Active: (task) => !task.completed,\n    Completed: (task) => task.completed,\n  };\n\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n  const prevTaskLength = usePrevious(tasks.length);\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const listHeadingRef = useRef(null);\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\n\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n\n      <ul // eslint-disable-line\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false },\n];\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}